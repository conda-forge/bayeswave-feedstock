diff --git a/BayesWaveUtils/bayeswave_pipe/bayeswave_pipe_utils.py b/BayesWaveUtils/bayeswave_pipe/bayeswave_pipe_utils.py
index d638110..be9cb06 100644
--- a/BayesWaveUtils/bayeswave_pipe/bayeswave_pipe_utils.py
+++ b/BayesWaveUtils/bayeswave_pipe/bayeswave_pipe_utils.py
@@ -931,7 +931,7 @@ class bayeswaveJob(pipeline.CondorDAGJob,pipeline.AnalysisJob):
             f=open(pre,'w')
             f.writelines(pre_string)
             f.close()
-            os.chmod(pre,0755)
+            os.chmod(pre, 0o755)
 
             self.add_condor_cmd("+PreCmd", '"'+pre+'"')
             self.add_condor_cmd("+PreArgs", '"'+"$(macrooutputDir)"+'"')
@@ -1146,7 +1146,7 @@ class bayeswave_postJob(pipeline.CondorDAGJob,pipeline.AnalysisJob):
             f=open(pre,'w')
             f.writelines(pre_string)
             f.close()
-            os.chmod(pre,0755)
+            os.chmod(pre, 0o755)
 
             self.add_condor_cmd("+PreCmd", '"'+pre+'"')
             self.add_condor_cmd("+PreArgs", '"'+"$(macrooutputDir)"+'"')
@@ -1437,7 +1437,7 @@ class megaskyJob(pipeline.CondorDAGJob,pipeline.AnalysisJob):
             f=open(pre,'w')
             f.writelines(pre_string)
             f.close()
-            os.chmod(pre,0755)
+            os.chmod(pre, 0o755)
 
             self.add_condor_cmd("+PreCmd", '"'+pre+'"')
             self.add_condor_cmd("+PreArgs", '"'+"$(macrooutputDir)"+'"')
@@ -1492,7 +1492,7 @@ class megaplotJob(pipeline.CondorDAGJob,pipeline.AnalysisJob):
             f=open(pre,'w')
             f.writelines(pre_string)
             f.close()
-            os.chmod(pre,0755)
+            os.chmod(pre, 0o755)
 
             self.add_condor_cmd("+PreCmd", '"'+pre+'"')
             self.add_condor_cmd("+PreArgs", '"'+"$(macrooutputDir)"+'"')
diff --git a/BayesWaveUtils/scripts/bayeswave_pipe b/BayesWaveUtils/scripts/bayeswave_pipe
index 04d38b8..4a96b24 100755
--- a/BayesWaveUtils/scripts/bayeswave_pipe
+++ b/BayesWaveUtils/scripts/bayeswave_pipe
@@ -17,7 +17,6 @@
 
 from __future__ import print_function
 
-import numpy as np
 import time
 import sys
 import os, shutil
@@ -27,15 +26,19 @@ import uuid
 import fileinput
 import ast
 import copy
+from optparse import OptionParser
+try:
+    import configparser
+except ImportError:  # python < 3
+    import ConfigParser as configparser
+
+import numpy as np
 
 from glue import pipeline
 
 from lalapps import inspiralutils
 from ligo import segments
 
-from optparse import OptionParser
-import ConfigParser
-
 from bayeswave_pipe import bayeswave_pipe_utils as pipe_utils
 
 #############################################
@@ -196,7 +199,7 @@ def parser():
 
 
     #Â --- Read config file
-    cp = ConfigParser.ConfigParser()
+    cp = configparser.ConfigParser()
     cp.optionxform = str
     cp.read(args[0])
 
@@ -316,7 +319,7 @@ if injfile is not None and cp.has_option('injections','nrhdf5'):
         nrdata=os.path.basename(nrdata)
 
         # Make sure normal permissions on hdf5
-        os.chmod(os.path.join(workdir, nrdata), 0644)
+        os.chmod(os.path.join(workdir, nrdata), 0o644)
 
         # Modify xml IN WORKDIR to point to local hdf5
         localize_xml(os.path.join(workdir, injfile), nr_full_path, nrdata)
@@ -326,7 +329,7 @@ if injfile is not None and cp.has_option('injections','nrhdf5'):
 print("Determining whether to do segment queries", file=sys.stdout)
 try:
     skip_segment_queries = cp.getboolean('datafind','ignore-science-segments')
-except ConfigParser.NoOptionError:
+except configparser.NoOptionError:
     print("No ignore-science-segments in [datafind], skipping segdb by default", file=sys.stdout)
     cp.set('datafind','ignore-science-segments', str(True))
     skip_segment_queries=True
@@ -739,7 +742,7 @@ if opts.submit_to_gracedb: submitToGraceDB_job = pipe_utils.submitToGraceDB(cp)
 #
 try:
     dataseed=cp.getint('input', 'dataseed')
-except ConfigParser.NoOptionError:
+except configparser.NoOptionError:
     print("[input] section requires dataseed for sim data", file=sys.stderr)
     print(" (you need this in bayeswave_post, even if real data", file=sys.stderr)
     print("...removing %s"%workdir, file=sys.stderr)
